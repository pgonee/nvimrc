{
  "[pgonee] new react component": {
    "prefix": "pg-rc",
    "body": [
      "import type { HTMLAttributes } from \"react\"",
      "import { cva, type VariantProps } from \"class-variance-authority\"",
      "",
      "const ${1:$TM_FILENAME_BASE}Variant = cva([], {",
      "  variants: {},",
      "  compoundVariants: [],",
      "  defaultVariants: {},",
      "})",
      "",
      "export type ${1:$TM_FILENAME_BASE}Props = object",
      "",
      "export default function ${1:$TM_FILENAME_BASE}({ className, ...props }: HTMLAttributes<HTMLDivElement> & ${1:$TM_FILENAME_BASE}Props & VariantProps<typeof ${1:$TM_FILENAME_BASE}Variant>) {",
      "  return (<div className={twMerge(\"\", className)} {...props}></div>)",
      "}"
    ],
    "description": ""
  },
  "[pgonee] new mobx react component": {
    "prefix": "pg-mobxrc",
    "body": [
      "import { cva, type VariantProps } from \"class-variance-authority\"",
      "import { observer } from \"mobx-react-lite\"",
      "import type { HTMLAttributes } from \"react\"",
      "",
      "const ${1:$TM_FILENAME_BASE}Variant = cva([], {",
      "  variants: {},",
      "  compoundVariants: [],",
      "  defaultVariants: {},",
      "})",
      "",
      "export type ${1:$TM_FILENAME_BASE}Props = object",
      "",
      "const ${1:$TM_FILENAME_BASE} = observer<HTMLAttributes<HTMLDivElement> & ${1:$TM_FILENAME_BASE}Props & VariantProps<typeof ${1:$TM_FILENAME_BASE}Variant>>(({ className, ...props }) => {",
      "  return (<div className={twMerge(\"\", className)} {...props}></div>)",
      "})",
      "",
      "export default ${1:$TM_FILENAME_BASE}"
    ],
    "description": ""
  },
  "[pgonee] new storybook story": {
    "prefix": "pg-story",
    "body": [
      "import type { Meta, StoryObj } from \"@storybook/react\"",
      "",
      "type Story = StoryObj<typeof ${1:${TM_FILENAME_BASE/(.*)\\.stories/$1/}}>",
      "",
      "const meta: Meta<typeof ${1:${TM_FILENAME_BASE/(.*)\\.stories/$1/}}> = {",
      "  component: ${1:${TM_FILENAME_BASE/(.*)\\.stories/$1/}},",
      "  args: {},",
      "  parameters: {",
      "    backgrounds: {",
      "      default: \"white\"",
      "    }",
      "  },",
      "}",
      "",
      "export default meta",
      "",
      "export const Default: Story = {",
      "  args: {},",
      "}"
    ],
    "description": ""
  },
  "[pgonee] new next pages": {
    "prefix": "pg-nextpages",
    "body": [
      "import { GetServerSideProps, NextPage } from \"next\"\n",
      "export const getServerSideProps: GetServerSideProps = async (context) => {",
      "  return {",
      "    props: {},",
      "  }",
      "}\n",
      "const ${1:${RELATIVE_FILEPATH/(pages\\/)?(.*).ts[x?]/${2:/pascalcase}/}}Page: NextPage = () => {",
      "  return <div></div>",
      "}\n",
      "export default $1Page"
    ],
    "description": ""
  },
  "[pgonee] new svg": {
    "prefix": "pg-svg",
    "body": [
      "export default function ${1:$TM_FILENAME_BASE}({ ...props }: SvgProps) {",
      "  return (",
      "    <svg",
      "      width=\"$2\"",
      "      height=\"$2\"",
      "      viewBox=\"0 0 $2 $2\"",
      "      fill=\"none\"",
      "      xmlns=\"http://www.w3.org/2000/svg\"",
      "      {...props}",
      "    >",
      "      $3",
      "    </svg>",
      "  )",
      "}"
    ],
    "description": ""
  }
}
